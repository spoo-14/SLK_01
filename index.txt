1)What is Java?
-> Java is a multi-platform, object-oriented, and network-centric language that can be used as a platform in itself.

2)What is Java and its types?
-> The types of the Java programming language are divided into two categories: primitive types and reference types. The primitive types (ยง4.2) are the boolean type and the numeric types. The numeric types are the integral types byte, short, int, long, and char, and the floating-point types float and double.

3)List the features of Java Programming language.
-> There are the following features in Java Programming Language.
Simple: Java is easy to learn. The syntax of Java is based on C++ which makes easier to write the program in it.
Object-Oriented: Java follows the object-oriented paradigm which allows us to maintain our code as the combination of different type of objects that incorporates both data and behavior.
Portable: Java supports read-once-write-anywhere approach. We can execute the Java program on every machine. Java program (.java) is converted to bytecode (.class) which can be easily run on every machine.
Platform Independent: Java is a platform independent programming language. It is different from other programming languages like C and C++ which needs a platform to be executed. Java comes with its platform on which its code is executed. Java doesn't depend upon the operating system to be executed.
Secured: Java is secured because it doesn't use explicit pointers. Java also provides the concept of ByteCode and Exception handling which makes it more secured.

4)What is the default value of the local variables?
-> The local variables are not initialized to any default value, neither primitives nor object references.

5)What are the various access specifiers in Java?
-> Public: The classes, methods, or variables which are defined as public, can be accessed by any class or method.
Protected: Protected can be accessed by the class of the same package, or by the sub-class of this class, or within the same class.
Default: Default are accessible within the package only. By default, all the classes, methods, and variables are of default scope.
Private: The private class, methods, or variables defined as private can be accessed within the class only.